class Stack:
    def __init__(self):
        self.stack = []  # Используем список для стека

    def push(self, value):
        if len(self.stack) >= 10:  # Проверка на переполнение
            print("Ошибка: Стек переполнен.")
        else:
            self.stack.append(value)  # Добавляем элемент на вершину стека

    def pop(self):
        if not self.stack:  # Проверка на пустоту
            print("Ошибка: Стек пуст.")
            return None
        return self.stack.pop()  # Удаляем и возвращаем верхний элемент

    def top(self):
        if not self.stack:  # Проверка на пустоту
            print("Ошибка: Стек пуст.")
            return None
        return self.stack[-1]  # Возвращаем верхний элемент без удаления

    def is_empty(self):
        return len(self.stack) == 0  # Проверка, пуст ли стек

# Пример использования стека
stack = Stack()
stack.push(10)
stack.push(20)
print(stack.top())  # Должен вернуть 20
print(stack.pop())  # Должен вернуть 20
print(stack.is_empty())  # Должен вернуть False
